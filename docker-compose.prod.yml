version: "3"

services:
  
  # NGINX ---------------------------------------------------------------------------- //
  nginx:
    image: nginx:stable
    build: 
      context: ./nginx
      dockerfile: Dockerfile.prod
    depends_on:
      - server_api
      - db
      - client
    links:
      - server_api
      - client
    ports:
      - ${NGINX_EXPOSED_PORT_PROD}:${NGINX_INNER_PORT_PROD}
      # - 443:443
    # restart: always
    networks:    
      - shoppingstorenetwork

  # REDIS ---------------------------------------------------------------------------- //
  redis:
    image: redis
    container_name: cache
    expose:
      - ${REDIS_PORT}
    networks:    
      - shoppingstorenetwork


  # SERVER ---------------------------------------------------------------------------- //
  server_api:
    build: 
      context: ./server
      dockerfile: Dockerfile.prod
    environment:
      - REDIS_URL=${REDIS_URL}
      - MONGO_URI=${MONGO_URI_PROD}
      - API_PORT=${API_PORT_PROD}
      - NODE_ENV=${NODE_ENV_PROD}
      - JWT_SECRET_TOKEN=${JWT_SECRET_TOKEN}
      - JWT_REFRESH_TOKEN=${JWT_REFRESH_TOKEN}
      - SEND_GRID_KEY=${SEND_GRID_KEY}
    volumes:
      - ./server/src:/app/server/src
      - ./server/public:/app/server/public
      - ./server/logs:/app/server/logs
    # ports: 
    #   - 3333:5000
    depends_on:
      - db
    links:
      - db
    # restart: always
    networks:    
      - shoppingstorenetwork

  # CLIENT ---------------------------------------------------------------------------- //
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.prod
    # ports:
    #   - ${REACT_APP_PORT_PROD}:${REACT_APP_PORT_PROD}
    links:
      - server_api
    # ports: 
    #   - 3334:4000
    depends_on: 
      - server_api
      - db
    # restart: always
    networks:    
      - shoppingstorenetwork
    
  # MONGODB ---------------------------------------------------------------------------- //
  db:
    image: mongo
    ports:
      - ${MONGO_EXPOSED_PORT_PROD}:${MONGO_INNER_PORT_PROD}
    restart: always
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --port ${MONGO_INNER_PORT_PROD}
    volumes:
      - board-dbdata:/data/db
    networks:    
    - shoppingstorenetwork
      
volumes:
  ? board-dbdata

networks:    
  shoppingstorenetwork: